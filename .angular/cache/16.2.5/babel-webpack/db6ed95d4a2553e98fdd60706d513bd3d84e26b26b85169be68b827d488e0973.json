{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MyCustomDirective {\n  constructor(el, ren) {\n    this.el = el;\n    this.ren = ren;\n  }\n  ngOnInit() {\n    if (this.condition) {\n      this.ren.addClass(this.el.nativeElement, 'bg');\n    } else {\n      this.ren.addClass(this.el.nativeElement, 'bg-one');\n    }\n    // const h1 = this.ren.createElement('h1');\n    // const text = this.ren.createText(\"My Own Custom Directive\");\n    // this.ren.appendChild(h1,text);\n    // this.ren.appendChild(this.el.nativeElement,h1)\n    console.log(\"Directive is getting excuted\", this.condition);\n  }\n  static #_ = this.ɵfac = function MyCustomDirective_Factory(t) {\n    return new (t || MyCustomDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: MyCustomDirective,\n    selectors: [[\"\", \"appMyCustom\", \"\"]],\n    inputs: {\n      condition: [\"appMyCustom\", \"condition\"]\n    }\n  });\n}","map":{"version":3,"names":["MyCustomDirective","constructor","el","ren","ngOnInit","condition","addClass","nativeElement","console","log","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors","inputs"],"sources":["C:\\Users\\vzamb\\Desktop\\Typescript-ts\\Angular workspace\\Project-1\\src\\app\\directives\\my-custom.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appMyCustom]'\n})\nexport class MyCustomDirective {\n  @Input('appMyCustom') condition!:boolean; \n  constructor(private el:ElementRef,private ren:Renderer2) { }\n  \n  ngOnInit(){\n    if(this.condition){\n      this.ren.addClass(this.el.nativeElement,'bg');\n    }else {\n      this.ren.addClass(this.el.nativeElement,'bg-one');\n    }\n    \n    // const h1 = this.ren.createElement('h1');\n    // const text = this.ren.createText(\"My Own Custom Directive\");\n    // this.ren.appendChild(h1,text);\n\n    // this.ren.appendChild(this.el.nativeElement,h1)\n\n    console.log(\"Directive is getting excuted\",this.condition);\n  }\n}\n  \n\n"],"mappings":";AAKA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,EAAa,EAASC,GAAa;IAAnC,KAAAD,EAAE,GAAFA,EAAE;IAAoB,KAAAC,GAAG,GAAHA,GAAG;EAAc;EAE3DC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACC,SAAS,EAAC;MAChB,IAAI,CAACF,GAAG,CAACG,QAAQ,CAAC,IAAI,CAACJ,EAAE,CAACK,aAAa,EAAC,IAAI,CAAC;KAC9C,MAAK;MACJ,IAAI,CAACJ,GAAG,CAACG,QAAQ,CAAC,IAAI,CAACJ,EAAE,CAACK,aAAa,EAAC,QAAQ,CAAC;;IAGnD;IACA;IACA;IAEA;IAEAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAC,IAAI,CAACJ,SAAS,CAAC;EAC5D;EAAC,QAAAK,CAAA,G;qBAlBUV,iBAAiB,EAAAW,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBf,iBAAiB;IAAAgB,SAAA;IAAAC,MAAA;MAAAZ,SAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}